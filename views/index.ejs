<html>
    <head>
    <script src="https://cdn.socket.io/3.1.3/socket.io.min.js" integrity="sha384-cPwlPLvBTa3sKAgddT6krw0cJat7egBga3DJepJyrLl4Q9/5WLra3rrnMcyTyOnh" crossorigin="anonymous"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    </head>

    <body>
        <div>
            <h3>채팅방 목록</h3><br/>
            <ul class="chatRoomList">
            </ul>
            <button class="createChatRoom">채팅방 만들기</button>
        </div>
        <div>
            <h3>"<span class="roomName"></span>" 채팅내용</h3><br/>
            <ul class="chat">
            </ul>
        </div>
        <input type="text" class="text"/>
        <button class="sendMessage">sned</button>
        <br/>
        <input type="text" class="nickname"/>
        <button class="setNickname">setNickname</button>
        <script>
        </script>
    </body>
    <script>
        let myInfo = {
            nickname: null,
            room: {
                roomId: null,
                roomName: null
            }
        }
        const socket = io('http://localhost:5000');
        socket.on('connect', function() {
            console.log('Connected');
            //연결 완료 후 로컬스토리지를 확인하여 닉네임 세팅
            const nickname = localStorage.getItem('nickname');
            socket.emit('setInit', { nickname }, response =>
                {
                    myInfo.nickname = response.nickname;
                    myInfo.room = response.room;
                    $('.nickname').val(myInfo.nickname);
                    $('.roomName').text(myInfo.room.roomName);
                }
            );
            socket.emit('getChatRoomList', null);
        });
        socket.on('getMessage', function({nickname, message}) {
            $('.chat').append('<li>'+nickname+' : '+message+'</li>');
        });
        socket.on('getChatRoomList', function(response) {
            let html = '';
            html += '<ul>';
            for(const {roomId, roomName} of Object.values(response)){
                html += '<li>';
                html += '<span class="enterChatRoom" data-roomId="'+roomId+'">';
                html += roomName;
                html += '</span>';
                html += '</li>';
            }
            html += '</ul>';
            $('.chatRoomList').html(html);
        });
        socket.on('disconnect', function() {
            $('.chatRoomList').html('');
            console.log('Disconnected');
        });

        //채팅방 생성
        $('.createChatRoom').on('click', function(){
            const roomName = prompt('채팅방 이름을 입력해주세요.');
            if(!roomName){
                return false;
            }
            $('.chat').html('');
            socket.emit('createChatRoom', roomName,  (res) => {
                if(!res) return;
                myInfo.room = res;
                $('.roomName').text(myInfo.room.roomName);
                $('.chat').html('');
            });
            socket.emit('getChatRoomList', null);
        })

        //채팅방 입장
        $(document).on('click', '.enterChatRoom', function(){
            const thisRoomId = $(this).attr('data-roomId');
            socket.emit('enterChatRoom', thisRoomId, (res) => {
                if(!res) return;
                myInfo.room = res;
                $('.roomName').text(myInfo.room.roomName);
                $('.chat').html('');
            });
        })

        //메시지 전송
        $('.sendMessage').on('click', function(){
            socket.emit('sendMessage', $('.text').val());
            $('.text').val('');
        })

        //닉네임 설정
        $('.setNickname').on('click', function(){
            socket.emit('setNickname', $('.nickname').val());
            localStorage.setItem('nickname', $('.nickname').val());
        })
    </script>
</html>